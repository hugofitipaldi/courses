library(ggplot2)
library(dplyr)

# Set parameters for the normal distribution
mu <- 0
sigma <- 2

# Create a data frame for the curve
x <- seq(-6, 6, length.out = 1000)
y <- dnorm(x, mean = mu, sd = sigma)
df <- data.frame(x = x, y = y)

# Calculate the specific x value (-2) probability area
x_cut <- -2
prob_area <- pnorm(x_cut, mean = mu, sd = sigma)

# Create the plot
ggplot(df, aes(x = x, y = y)) +
  # Add the main normal curve
  geom_line() +
  # Add fill for full distribution
  geom_area(data = df, aes(x = x, y = y), fill = "#a3d977", alpha = 0.7) +
  # Add fill for the P(X <= -2) region
  geom_area(data = df %>% filter(x <= x_cut), 
            aes(x = x, y = y), fill = "#432371", alpha = 0.8) +
  # Add line at z = -1
  geom_vline(xintercept = -2, linetype = "solid", color = "black") +
  # Add text for z = -1
  annotate("text", x = -1, y = 0.21, label = "z = -1", vjust = 1.5) +
  # Add a light gray background grid
  theme_minimal() +
  # Customize the appearance
  theme(
    panel.grid.major = element_line(color = "#e5e5e5"),
    panel.grid.minor = element_line(color = "#e5e5e5"),
    plot.background = element_rect(fill = "#f5f5f5", color = NA)
  ) +
  # Set appropriate scales
  scale_x_continuous(breaks = c(-4, -2, 0, 2, 4), limits = c(-6, 7)) +
  scale_y_continuous(limits = c(0, 0.22)) +
  # Add red outline to highlight the left tail area (similar to what's in the image)
  geom_path(data = df %>% filter(x <= -1), 
            aes(x = x, y = y), color = "red", size = 0.8) +
  # Add axis labels
  labs(x = "x", y = "density")

# Display the plot
print(p)

# Calculate the probability for documentation
cat("P(X <= -2 | μ = 0, σ = 2) =", round(prob_area, 4), "\n")